CREATE TABLE search (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    "conversation_id" VARCHAR(255) NOT NULL, 
	"user_search" VARCHAR(255) NOT NULL,
    "portal" VARCHAR (255) NOT NULL,
    "date" DATETIME NOT NULL
);


CREATE TABLE result_tag (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    "name" VARCHAR(255) NOT NULL,
    "portal" VARCHAR(255) NOT NULL
);

CREATE TABLE result_group (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    "name" VARCHAR(255) NOT NULL,
    "description" VARCHAR(255),
    "portal" VARCHAR(255) NOT NULL
);


CREATE TABLE result (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    "title" VARCHAR(255) NOT NULL, 
    "url" VARCHAR(255) NOT NULL,
    "description" VARCHAR(255) NOT NULL,
    "portal" VARCHAR(255) NOT NULL,
    "owner_org" VARCHAR(255),
    "owner_org_description" VARCHAR(255),
    "maintainer" VARCHAR(255),
    "dataset_publication_date" VARCHAR(255),
    "dataset_modification_date" VARCHAR(255),
    "metadata_creation_date" VARCHAR(255),
    "metadata_modification_date" VARCHAR(255)
);

CREATE TABLE link_results_tags (
    "result_id" INTEGER NOT NULL,
    "tag_id" INTEGER NOT NULL,
    FOREIGN KEY ("result_id")
        REFERENCES result ("id"),
    FOREIGN KEY ("tag_id")
        REFERENCES result_tag ("id")
    PRIMARY KEY (result_id, tag_id)
);


CREATE TABLE link_results_groups (
    "result_id" INTEGER NOT NULL,
    "group_id" INTEGER NOT NULL,
    FOREIGN KEY ("result_id")
        REFERENCES result ("id"),
    FOREIGN KEY ("group_id")
        REFERENCES result_group ("id")
    PRIMARY KEY (result_id, group_id)
);


CREATE TABLE search_reranking_feedback (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,	
    "search_id" INTEGER NOT NULL,
    "old_rank" INTEGER NOT NULL,
    "new_rank" INTEGER NOT NULL,
    "result_id" INTEGER NOT NULL,
    "feedback" INTEGER NOT NULL,
    "methods_used" VARCHAR(255) NOT NULL,
    FOREIGN KEY ("search_id")
        REFERENCES search ("id"),
    FOREIGN KEY ("result_id")
        REFERENCES result ("id")
    );